// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Applications {
  id       Int       @id @default(autoincrement())
  name     String
  secret   String    @default(uuid())
  validity DateTime?
  disabled Boolean   @default(false)
  isValid  Boolean   @default(true)
}

model Roles {
  id                Int                 @id @default(autoincrement())
  code              String
  title             String
  UserRoles         UserRoleMappings[]
  RoleRouteMappings RoleRouteMappings[]
}

model Users {
  id         Int                @id @default(autoincrement())
  firstName  String
  middleName String?
  lastName   String
  email      String             @unique
  password   String
  UserRoles  UserRoleMappings[]
}

model UserRoleMappings {
  id     Int   @id @default(autoincrement())
  userId Int
  roleId Int
  user   Users @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  role   Roles @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Restrict)

  @@unique([userId, roleId])
}

model Routes {
  id                Int                 @id @default(autoincrement())
  title             String
  pathname          String              @unique
  isActive          Boolean             @default(true)
  RoleRouteMappings RoleRouteMappings[]
}

model RoleRouteMappings {
  id      Int     @id @default(autoincrement())
  roleId  Int
  routeId Int
  summary String?
  role    Roles   @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  route   Routes  @relation(fields: [routeId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([roleId, routeId])
}
