// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int           @id @default(autoincrement())
  firstName      String
  middleName     String?
  lastName       String
  email          String        @unique
  dateOfBirth    DateTime
  streetName     String
  addressL2      String?
  city           String
  pincode        String
  province       String
  phone          String        @db.VarChar(20)
  country        String
  dateJoined     DateTime
  status         String?
  type           String?
  organizationId Int
  organization   Organizations @relation(fields: [organizationId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  UserRoles      UserRoles[]
  Schedule       Schedules[]
  TimeSheet      TimeSheets[]
}

model Roles {
  id          Int         @id @default(autoincrement())
  code        String      @unique
  title       String
  description String?
  hourlyWage  Decimal
  UserRoles   UserRoles[]
  Schedules   Schedules[]
}

model UserRoles {
  id     Int   @id @default(autoincrement())
  userId Int
  roleId Int
  user   Users @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  role   Roles @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Restrict)

  @@unique([userId, roleId])
}

model Organizations {
  id      Int     @id @default(autoincrement())
  name    String
  summary String?
  webLink String?
  Users   Users[]
}

model Schedules {
  id            Int      @id @default(autoincrement())
  userId        Int?
  dataTimeStart DateTime
  dateTimeEnd   DateTime
  roleId        Int
  notes         String?
  user          Users?   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  role          Roles    @relation(fields: [roleId], references: [id], onUpdate: Cascade, onDelete: Restrict)
}

model TimeSheets {
  id         Int          @id @default(autoincrement())
  userId     Int
  hourlyWage Decimal
  user       Users        @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  ClockTimes ClockTimes[]
}

model ClockTimes {
  id          Int        @id @default(autoincrement())
  startTime   DateTime
  endTime     DateTime?
  timeSheetId Int
  timesheet   TimeSheets @relation(fields: [timeSheetId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
